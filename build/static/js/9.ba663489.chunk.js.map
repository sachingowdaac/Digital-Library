{"version":3,"sources":["firebase.js","components/authentication.js","components/navBar.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","db","firestore","SignUpUser","email","password","createUserWithEmailAndPassword","catch","error","alert","message","LoginWithGmail","provider","GoogleAuthProvider","signInWithPopup","LoginUser","signInWithEmailAndPassword","then","data","console","log","errorCode","code","SignOut","e","preventDefault","signOut","NavBar","userin","useState","user","setUser","localStorage","theme","setTheme","darkTheme","setDarkTheme","colorTheme","useEffect","root","window","document","documentElement","classList","remove","add","setItem","onAuthStateChanged","className","exact","to","activeClassName","fill","stroke","viewBox","xmlns","strokeLinecap","strokeLinejoin","strokeWidth","d","data-tip","data-for","id","place","effect","onClick","style","backgroundColor","htmlClasses","querySelector","removeItem"],"mappings":"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","file":"static/js/9.ba663489.chunk.js","sourcesContent":["import firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\nimport 'firebase/firebase-firestore';\r\n\r\nvar firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\r\n  authDomain: 'digital-book-library.firebaseapp.com',\r\n  projectId: 'digital-book-library',\r\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\r\n  appId: process.env.REACT_APP_FIREBASE_APP_ID,\r\n  measurementId: process.env.REACT_APP_FIREBASE_MEASUREMENT_ID,\r\n};\r\nfirebase.initializeApp(firebaseConfig);\r\nexport const auth = firebase.auth();\r\nexport const db = firebase.firestore();\r\nexport { firebase };\r\n","import { auth } from '../firebase';\r\nimport { firebase } from '../firebase';\r\n\r\nexport const SignUpUser = (email, password) => {\r\n  return auth.createUserWithEmailAndPassword(email, password).catch((error) => {\r\n    alert(error.message);\r\n  });\r\n};\r\n\r\nexport const LoginWithGmail = () => {\r\n  var provider = new firebase.auth.GoogleAuthProvider();\r\n  return auth.signInWithPopup(provider);\r\n};\r\n\r\nexport const LoginUser = (email, password) => {\r\n  return auth\r\n    .signInWithEmailAndPassword(email, password)\r\n    .then((data) => console.log(data))\r\n    .catch((error) => {\r\n      var errorCode = error.code;\r\n      if (errorCode === 'auth/wrong-password') {\r\n        alert('Useremail and password does not match');\r\n      } else if (errorCode === 'auth/user-not-found') {\r\n        alert(error.message);\r\n      }\r\n    });\r\n};\r\n\r\nexport const SignOut = (e) => {\r\n  e.preventDefault();\r\n  return auth.signOut();\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { SignOut } from './authentication';\r\nimport { auth } from '../firebase';\r\nimport ReactTooltip from 'react-tooltip';\r\n\r\nconst NavBar = ({ userin }) => {\r\n  const [user, setUser] = useState();\r\n  const [theme, setTheme] = useState(localStorage.theme);\r\n  const [darkTheme, setDarkTheme] = useState(theme === 'dark' ? false : true);\r\n\r\n  const colorTheme = theme === 'dark' ? 'light' : 'dark';\r\n  useEffect(() => {\r\n    const root = window.document.documentElement;\r\n    root.classList.remove(colorTheme);\r\n    root.classList.add(theme);\r\n    localStorage.setItem('theme', theme);\r\n  }, [theme, colorTheme]);\r\n\r\n  const changeTheme = () => {\r\n    let htmlClasses = document.querySelector('html').classList;\r\n    if (localStorage.theme === 'dark') {\r\n      htmlClasses.remove('dark');\r\n      localStorage.removeItem('theme');\r\n      setDarkTheme(true);\r\n    } else {\r\n      htmlClasses.add('dark');\r\n      localStorage.theme = 'dark';\r\n      setDarkTheme(false);\r\n    }\r\n    return [colorTheme, setTheme];\r\n  };\r\n\r\n  auth.onAuthStateChanged((user) => {\r\n    if (user) {\r\n      setUser(true);\r\n    } else {\r\n      setUser(false);\r\n    }\r\n    userin(user);\r\n  });\r\n\r\n  return (\r\n    <nav className=\"fixed top-0 w-full bg-white dark:bg-gray-900 h-16 shadow\">\r\n      <div className=\"items-center mx-auto sm:w-4/5 p-2\">\r\n        <div className=\"flex justify-between\">\r\n          <div>\r\n            <NavLink exact to=\"/\" activeClassName=\"text-purple-600\">\r\n              <svg\r\n                className=\"w-12 h-12\"\r\n                fill=\"none\"\r\n                stroke=\"currentColor\"\r\n                viewBox=\"0 0 24 24\"\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n              >\r\n                <path\r\n                  strokeLinecap=\"round\"\r\n                  strokeLinejoin=\"round\"\r\n                  strokeWidth=\"1\"\r\n                  d=\"M12 6.253v13m0-13C10.832 5.477 9.246 5 7.5 5S4.168 5.477 3 6.253v13C4.168 18.477 5.754 18 7.5 18s3.332.477 4.5 1.253m0-13C13.168 5.477 14.754 5 16.5 5c1.747 0 3.332.477 4.5 1.253v13C19.832 18.477 18.247 18 16.5 18c-1.746 0-3.332.477-4.5 1.253\"\r\n                ></path>\r\n              </svg>\r\n            </NavLink>\r\n          </div>\r\n          <div className=\"flex items-center justify-between space-x-5\">\r\n            <div className={user ? 'block' : 'hidden'}>\r\n              <NavLink\r\n                exact\r\n                to=\"/\"\r\n                activeClassName=\"font-black text-purple-600\"\r\n                className=\"hover:text-purple-900\"\r\n              >\r\n                Home\r\n              </NavLink>\r\n            </div>\r\n            <div>\r\n              <NavLink\r\n                exact\r\n                to=\"/about\"\r\n                activeClassName=\"font-black text-purple-600\"\r\n                className=\"hover:text-purple-900\"\r\n              >\r\n                About\r\n              </NavLink>\r\n            </div>\r\n            <div\r\n              data-tip\r\n              data-for=\"mybooks\"\r\n              className={user ? 'block' : 'hidden'}\r\n            >\r\n              <NavLink\r\n                exact\r\n                to=\"/mybooks\"\r\n                activeClassName=\"font-black text-purple-600\"\r\n                className=\"hover:text-purple-900\"\r\n              >\r\n                <svg\r\n                  className=\"w-6 h-6\"\r\n                  fill=\"none\"\r\n                  stroke=\"currentColor\"\r\n                  viewBox=\"0 0 24 24\"\r\n                  xmlns=\"http://www.w3.org/2000/svg\"\r\n                >\r\n                  <path\r\n                    strokeLinecap=\"round\"\r\n                    strokeLinejoin=\"round\"\r\n                    strokeWidth={2}\r\n                    d=\"M5 5a2 2 0 012-2h10a2 2 0 012 2v16l-7-3.5L5 21V5z\"\r\n                  ></path>\r\n                </svg>\r\n              </NavLink>\r\n              <ReactTooltip id=\"mybooks\" place=\"right\" effect=\"solid\">\r\n                My Books\r\n              </ReactTooltip>\r\n            </div>\r\n            <div className={user ? 'hidden' : 'block'}>\r\n              <NavLink\r\n                exact\r\n                to=\"/signup\"\r\n                activeClassName=\"font-black text-purple-600\"\r\n                className=\"hover:text-purple-900\"\r\n              >\r\n                SignUp\r\n              </NavLink>\r\n            </div>\r\n            <div className={user ? 'hidden' : 'block'}>\r\n              <NavLink\r\n                exact\r\n                to={user ? '/' : '/login'}\r\n                activeClassName=\"font-black text-purple-600\"\r\n                className=\"hover:text-purple-900\"\r\n              >\r\n                Login\r\n              </NavLink>\r\n            </div>\r\n            <div className={user ? 'block' : 'hidden'}>\r\n              <button\r\n                className=\"p-1 rounded-full focus:outline-none focus:shadow-outline hover:bg-purple-500\"\r\n                onClick={SignOut}\r\n              >\r\n                Logout\r\n              </button>\r\n            </div>\r\n          </div>\r\n          <div className=\"fixed bottom-5 right-4 bg-transparent\">\r\n            <div\r\n              data-tip\r\n              data-for=\"toggle\"\r\n              style={\r\n                darkTheme\r\n                  ? { backgroundColor: '#312b47' }\r\n                  : { backgroundColor: '#0073e5' }\r\n              }\r\n              className=\"p-2 w-10 h-10 bg-purple-700 rounded-full focus:outline-none  bg-transparent text-white hover:bg-purple-900\"\r\n              onClick={changeTheme}\r\n            >\r\n              {darkTheme ? (\r\n                <svg\r\n                  className=\"w-6 h-6\"\r\n                  fill=\"none\"\r\n                  stroke=\"currentColor\"\r\n                  viewBox=\"0 0 24 24\"\r\n                  xmlns=\"http://www.w3.org/2000/svg\"\r\n                >\r\n                  <path\r\n                    strokeLinecap=\"round\"\r\n                    strokeLinejoin=\"round\"\r\n                    strokeWidth=\"2\"\r\n                    d=\"M20.354 15.354A9 9 0 018.646 3.646 9.003 9.003 0 0012 21a9.003 9.003 0 008.354-5.646z\"\r\n                  ></path>\r\n                </svg>\r\n              ) : (\r\n                <svg\r\n                  className=\"w-6 h-6\"\r\n                  fill=\"none\"\r\n                  stroke=\"currentColor\"\r\n                  viewBox=\"0 0 24 24\"\r\n                  xmlns=\"http://www.w3.org/2000/svg\"\r\n                >\r\n                  <path\r\n                    strokeLinecap=\"round\"\r\n                    strokeLinejoin=\"round\"\r\n                    strokeWidth=\"2\"\r\n                    d=\"M9.663 17h4.673M12 3v1m6.364 1.636l-.707.707M21 12h-1M4 12H3m3.343-5.657l-.707-.707m2.828 9.9a5 5 0 117.072 0l-.548.547A3.374 3.374 0 0014 18.469V19a2 2 0 11-4 0v-.531c0-.895-.356-1.754-.988-2.386l-.548-.547z\"\r\n                  ></path>\r\n                </svg>\r\n              )}\r\n              <ReactTooltip id=\"toggle\" place=\"top\" effect=\"solid\">\r\n                Toggle to Dark/light\r\n              </ReactTooltip>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\nexport default NavBar;\r\n"],"sourceRoot":""}